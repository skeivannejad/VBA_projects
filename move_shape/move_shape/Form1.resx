<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicUpBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pxsyp38AAAAASUVORK5CYII=
</value>
  </data>
</root>